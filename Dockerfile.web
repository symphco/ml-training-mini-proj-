# syntax=docker/dockerfile:experimental
ARG ARG_PROJECT_ID

FROM node:16-alpine AS build

ARG ARG_BUILD_ID
ARG ARG_PROJECT_ID
ARG ARG_COMMIT_SHA
ARG ARG_REVISION_ID
ARG ARG_SHORT_SHA
ARG ARG_REPO_NAME
ARG ARG_BRANCH_NAME
ARG ARG_TAG_NAME

ENV NEXT_PUBLIC_BUILD_ID=$ARG_BUILD_ID
ENV NEXT_PUBLIC_PROJECT_ID=$ARG_PROJECT_ID
ENV NEXT_PUBLIC_COMMIT_SHA=$ARG_COMMIT_SHA
ENV NEXT_PUBLIC_REVISION_ID=$ARG_REVISION_ID
ENV NEXT_PUBLIC_SHORT_SHA=$ARG_SHORT_SHA
ENV NEXT_PUBLIC_REPO_NAME=$ARG_REPO_NAME
ENV NEXT_PUBLIC_BRANCH_NAME=$ARG_BRANCH_NAME
ENV NEXT_PUBLIC_TAG_NAME=$ARG_TAG_NAME

WORKDIR /workspace

COPY *.json ./
RUN npm install

COPY ./ ./
RUN npx nx build web

RUN npx gzipper compress --verbose --skip-compressed --exclude map --brotli --brotli-quality 11 /workspace/dist/apps/web
RUN npx gzipper compress --verbose --skip-compressed --exclude map --gzip-level 9 /workspace/dist/apps/web


FROM nginx:alpine AS deploy
COPY apps/web/nginx.conf.template /etc/nginx/conf.d/configfile.template
COPY --from=build /workspace/dist/apps/web /usr/share/nginx/html

ENV PORT 8080
ENV HOST 0.0.0.0
EXPOSE 8080
CMD sh -c "envsubst '\$PORT' < /etc/nginx/conf.d/configfile.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"